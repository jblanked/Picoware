_FRAME_1_16x15 = bytes(
    [
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0xFD,
        0xFD,
        0x00,
        0xFD,
        0x00,
        0x00,
        0x00,
        0xFD,
        0xFD,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0xFD,
        0x00,
        0x00,
        0xFD,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0xFD,
        0x00,
        0x00,
        0x00,
        0x00,
        0xFD,
        0xFD,
        0x00,
        0x00,
        0x00,
        0xFD,
        0x00,
        0x00,
        0x00,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0x00,
        0x00,
        0x00,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0x00,
        0xFD,
        0x00,
        0x00,
        0x00,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0x00,
        0x00,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0x00,
        0x00,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0x00,
        0xFD,
        0x00,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0x00,
        0xFD,
        0x00,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0x00,
        0xFD,
        0xFD,
        0xFD,
        0x00,
        0xFD,
        0xFD,
        0xFD,
        0x00,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0x00,
        0x00,
        0x00,
        0xFD,
        0xFD,
        0x00,
        0xFD,
        0xFD,
        0xFD,
        0x00,
        0x00,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0xFD,
        0x00,
        0x00,
        0xFD,
        0x00,
        0x00,
        0x00,
        0x00,
        0xFD,
        0xFD,
        0xFD,
        0x00,
        0x00,
        0x00,
        0x00,
        0xFD,
        0x00,
        0x00,
        0x00,
        0xFD,
        0x00,
        0x00,
        0x00,
        0x00,
        0xFD,
        0xFD,
        0xFD,
        0x00,
        0x00,
        0xFD,
        0xFD,
        0xFD,
        0x00,
        0x00,
        0x00,
        0x00,
        0xFD,
        0xFD,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0xFD,
        0xFD,
        0x00,
        0x00,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0xFD,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
    ]
)
_FRAME_2_16x15 = bytes(
    [
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x00,
        0x00,
        0x1B,
        0x1B,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x1B,
        0x1B,
        0x00,
        0x00,
        0x00,
        0x00,
        0x1B,
        0x1B,
        0x1B,
        0x00,
        0x00,
        0x1B,
        0x1B,
        0x1B,
        0x00,
        0x00,
        0x00,
        0x00,
        0x1B,
        0x00,
        0x00,
        0x00,
        0x1B,
        0x00,
        0x00,
        0x00,
        0x00,
        0x1B,
        0x1B,
        0x1B,
        0x00,
        0x00,
        0x00,
        0x00,
        0x1B,
        0x00,
        0x00,
        0x1B,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x00,
        0x00,
        0x1B,
        0x1B,
        0x1B,
        0x00,
        0x1B,
        0x1B,
        0x00,
        0x00,
        0x00,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x00,
        0x1B,
        0x1B,
        0x1B,
        0x00,
        0x1B,
        0x1B,
        0x1B,
        0x00,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x00,
        0x1B,
        0x00,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x00,
        0x1B,
        0x00,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x00,
        0x00,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x00,
        0x00,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x00,
        0x00,
        0x00,
        0x1B,
        0x00,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x00,
        0x00,
        0x00,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x00,
        0x00,
        0x00,
        0x1B,
        0x00,
        0x00,
        0x00,
        0x1B,
        0x1B,
        0x00,
        0x00,
        0x00,
        0x00,
        0x1B,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x1B,
        0x00,
        0x00,
        0x1B,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x1B,
        0x1B,
        0x00,
        0x00,
        0x00,
        0x1B,
        0x00,
        0x1B,
        0x1B,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x1B,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
    ]
)

_FRAME_3_16x15 = bytes(
    [
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0x00,
        0x00,
        0xF0,
        0xF0,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0xF0,
        0xF0,
        0x00,
        0x00,
        0x00,
        0x00,
        0xF0,
        0xF0,
        0xF0,
        0x00,
        0x00,
        0xF0,
        0xF0,
        0xF0,
        0x00,
        0x00,
        0x00,
        0x00,
        0xF0,
        0x00,
        0x00,
        0x00,
        0xF0,
        0x00,
        0x00,
        0x00,
        0x00,
        0xF0,
        0xF0,
        0xF0,
        0x00,
        0x00,
        0x00,
        0x00,
        0xF0,
        0x00,
        0x00,
        0xF0,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0x00,
        0x00,
        0xF0,
        0xF0,
        0xF0,
        0x00,
        0xF0,
        0xF0,
        0x00,
        0x00,
        0x00,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0x00,
        0xF0,
        0xF0,
        0xF0,
        0x00,
        0xF0,
        0xF0,
        0xF0,
        0x00,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0x00,
        0xF0,
        0x00,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0x00,
        0xF0,
        0x00,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0x00,
        0x00,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0x00,
        0x00,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0x00,
        0x00,
        0x00,
        0xF0,
        0x00,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0x00,
        0x00,
        0x00,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0x00,
        0x00,
        0x00,
        0xF0,
        0x00,
        0x00,
        0x00,
        0xF0,
        0xF0,
        0x00,
        0x00,
        0x00,
        0x00,
        0xF0,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0xF0,
        0x00,
        0x00,
        0xF0,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0xF0,
        0xF0,
        0x00,
        0x00,
        0x00,
        0xF0,
        0x00,
        0xF0,
        0xF0,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0xF0,
        0x00,
        0x00,
        0x00,
        0x00,
        0x00,
    ]
)

_desktop = None
_desktop_frame = 0
_frame_counter = 0
_desktop_http = None
_desktop_time_updated = False
_desktop_is_dark_mode = False


def start(view_manager) -> bool:
    """Start the loading animation."""
    from picoware.gui.desktop import Desktop
    from picoware.applications.wifi.utils import connect_to_saved_wifi

    global _desktop, _desktop_http, _desktop_is_dark_mode

    if _desktop is None:
        _desktop = Desktop(
            view_manager.draw,
            view_manager.get_foreground_color(),
            view_manager.get_background_color(),
        )

    wifi = view_manager.get_wifi()

    if not wifi:
        return True

    connect_to_saved_wifi(view_manager)

    if _desktop_http is None:
        from picoware.system.http import HTTP

        _desktop_http = HTTP()

        if wifi.is_connected():
            _desktop_http.get_async("http://worldtimeapi.org/api/ip")

    return True


def run(view_manager) -> None:
    """Animate the loading spinner."""
    from picoware.system.buttons import BUTTON_LEFT, BUTTON_CENTER, BUTTON_UP
    from picoware.system.view import View
    from picoware.system.vector import Vector

    input_manager = view_manager.input_manager
    button: int = input_manager.get_last_button()

    global _desktop
    global _desktop_frame
    global _frame_counter
    global _desktop_http
    global _desktop_time_updated

    if _desktop:
        battery_level: int = input_manager.battery
        _desktop.set_battery(battery_level)
        _desktop.draw(
            (
                _FRAME_1_16x15
                if _desktop_frame == 0
                else (_FRAME_2_16x15 if _desktop_frame == 1 else _FRAME_3_16x15)
            ),
            Vector(16, 15),
            Vector(150, 150),
        )
        _frame_counter += 1
        if _frame_counter % 10 == 0:
            _desktop_frame = (_desktop_frame + 1) % 3

        wifi = view_manager.get_wifi()
        if wifi:
            if not _desktop_time_updated and wifi.is_connected():
                if _desktop_http and _desktop_http.is_request_complete():
                    try:
                        response = _desktop_http.response
                        if not response:
                            # i realized that sometimes this API returns an empty response
                            # but it usually works within 2-3 tries
                            _desktop_http.clear_async_response()
                            _desktop_http.get_async("http://worldtimeapi.org/api/ip")
                            return
                        if _desktop_http.state == 0:  # HTTP_IDLE
                            from ujson import loads

                            data: dict = loads(response)
                            datetime_str: str = data.get("datetime", "")
                            if datetime_str:
                                date_part, time_part = datetime_str.split("T")
                                time_part = time_part.split(".")[
                                    0
                                ]  # Remove milliseconds
                                hours, minutes, seconds = map(int, time_part.split(":"))
                                year, month, day = map(int, date_part.split("-"))

                                view_manager.get_time().set(
                                    year, month, day, hours, minutes, seconds
                                )

                                _desktop_time_updated = True

                                _desktop.set_time(view_manager.get_time().time)

                                del _desktop_http
                                _desktop_http = None
                        else:
                            print(
                                "Failed to fetch time data, HTTP state:",
                                _desktop_http.state,
                            )

                    except Exception as e:
                        print("Error processing time data:", e)
            elif _desktop_time_updated:
                # time is RTC, so no need to fetch, just pass the updated time
                _desktop.set_time(view_manager.get_time().time)

    if button == BUTTON_LEFT:
        from picoware.applications.system import system_info

        input_manager.reset()
        view_manager.add(
            View("system_info", system_info.run, system_info.start, system_info.stop)
        )
        view_manager.switch_to("system_info")
    elif button in (BUTTON_CENTER, BUTTON_UP):
        from picoware.applications import library

        input_manager.reset()
        view_manager.add(View("library", library.run, library.start, library.stop))
        view_manager.switch_to("library")


def stop(view_manager) -> None:
    """Stop the loading animation."""
    from gc import collect

    global _desktop
    global _desktop_frame
    global _frame_counter
    global _desktop_http
    if _desktop:
        del _desktop
        _desktop = None
    if _desktop_http:
        del _desktop_http
        _desktop_http = None
    _desktop_frame = 0
    _frame_counter = 0
    collect()
